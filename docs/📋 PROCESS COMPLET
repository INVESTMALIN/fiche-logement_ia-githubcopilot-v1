# üìã PROCESS COMPLET - Ajouter une nouvelle section au formulaire

> **CONTEXTE** : Application React "Fiche logement" avec FormContext centralis√©, sauvegarde Supabase, 22 sections de formulaire. Architecture compl√®te fonctionnelle avec mapping FormContext ‚Üî Supabase.

---

## üéØ **√âTAPE 1 : PLANIFICATION DE LA NOUVELLE SECTION**

### ‚úÖ **1.1 - D√©finir la structure des donn√©es**
```javascript
// Exemple pour "section_securite"
section_securite: {
  detecteur_fumee: null,           // Radio: true/false/null
  detecteur_fumee_details: "",     // Input text conditionnel
  detecteur_co: null,              // Radio: true/false/null
  detecteur_co_details: "",        // Input text conditionnel
  alarme_incendie: null,           // Radio: true/false/null
  extincteur: null,                // Radio: true/false/null
  trousse_secours: null,           // Radio: true/false/null
  consignes_securite: "",          // Textarea
  photos_securite: []              // Array de photos
}
```

### ‚úÖ **1.2 - Lister les colonnes Supabase n√©cessaires**
```sql
-- Colonnes √† cr√©er pour section_securite
securite_detecteur_fumee BOOLEAN
securite_detecteur_fumee_details TEXT
securite_detecteur_co BOOLEAN  
securite_detecteur_co_details TEXT
securite_alarme_incendie BOOLEAN
securite_extincteur BOOLEAN
securite_trousse_secours BOOLEAN
securite_consignes_securite TEXT
securite_photos_securite TEXT[]
```

---

## üóÑÔ∏è **√âTAPE 2 : MISE √Ä JOUR SUPABASE**

### ‚úÖ **2.1 - Ex√©cuter le SQL d'ajout de colonnes**
```sql
-- Dans Supabase SQL Editor
ALTER TABLE fiches ADD COLUMN IF NOT EXISTS securite_detecteur_fumee BOOLEAN;
ALTER TABLE fiches ADD COLUMN IF NOT EXISTS securite_detecteur_fumee_details TEXT;
ALTER TABLE fiches ADD COLUMN IF NOT EXISTS securite_detecteur_co BOOLEAN;
ALTER TABLE fiches ADD COLUMN IF NOT EXISTS securite_detecteur_co_details TEXT;
ALTER TABLE fiches ADD COLUMN IF NOT EXISTS securite_alarme_incendie BOOLEAN;
ALTER TABLE fiches ADD COLUMN IF NOT EXISTS securite_extincteur BOOLEAN;
ALTER TABLE fiches ADD COLUMN IF NOT EXISTS securite_trousse_secours BOOLEAN;
ALTER TABLE fiches ADD COLUMN IF NOT EXISTS securite_consignes_securite TEXT;
ALTER TABLE fiches ADD COLUMN IF NOT EXISTS securite_photos_securite TEXT[];
```

### ‚úÖ **2.2 - V√©rification**
```sql
-- V√©rifier que les colonnes sont cr√©√©es
SELECT column_name FROM information_schema.columns 
WHERE table_name = 'fiches' AND column_name LIKE 'securite_%';
```

---

## üèóÔ∏è **√âTAPE 3 : MISE √Ä JOUR FormContext.jsx**

### ‚úÖ **3.1 - Ajouter dans initialFormData**
```javascript
// Dans src/components/FormContext.jsx, ligne ~100
section_securite: {
  detecteur_fumee: null,
  detecteur_fumee_details: "",
  detecteur_co: null,
  detecteur_co_details: "",
  alarme_incendie: null,
  extincteur: null,
  trousse_secours: null,
  consignes_securite: "",
  photos_securite: []
},
```

### ‚úÖ **3.2 - Section d√©j√† vide donc RAS**
```javascript
// Ligne ~280 - D√©j√† pr√©sent et vide
section_securite: {}
```

---

## üîÑ **√âTAPE 4 : MISE √Ä JOUR supabaseHelpers.js**

### ‚úÖ **4.1 - Ajouter dans mapFormDataToSupabase()**
```javascript
// Dans src/lib/supabaseHelpers.js, ligne ~50
// Section S√©curit√©
securite_detecteur_fumee: formData.section_securite?.detecteur_fumee ?? null,
securite_detecteur_fumee_details: formData.section_securite?.detecteur_fumee_details || null,
securite_detecteur_co: formData.section_securite?.detecteur_co ?? null,
securite_detecteur_co_details: formData.section_securite?.detecteur_co_details || null,
securite_alarme_incendie: formData.section_securite?.alarme_incendie ?? null,
securite_extincteur: formData.section_securite?.extincteur ?? null,
securite_trousse_secours: formData.section_securite?.trousse_secours ?? null,
securite_consignes_securite: formData.section_securite?.consignes_securite || null,
securite_photos_securite: formData.section_securite?.photos_securite || [],
```

### ‚úÖ **4.2 - Ajouter dans mapSupabaseToFormData()**
```javascript
// Dans src/lib/supabaseHelpers.js, ligne ~150
section_securite: {
  detecteur_fumee: supabaseData.securite_detecteur_fumee ?? null,
  detecteur_fumee_details: supabaseData.securite_detecteur_fumee_details || "",
  detecteur_co: supabaseData.securite_detecteur_co ?? null,
  detecteur_co_details: supabaseData.securite_detecteur_co_details || "",
  alarme_incendie: supabaseData.securite_alarme_incendie ?? null,
  extincteur: supabaseData.securite_extincteur ?? null,
  trousse_secours: supabaseData.securite_trousse_secours ?? null,
  consignes_securite: supabaseData.securite_consignes_securite || "",
  photos_securite: supabaseData.securite_photos_securite || []
},
```

---

## üìÑ **√âTAPE 5 : CR√âER LE COMPOSANT PAGE**

### ‚úÖ **5.1 - Cr√©er src/pages/FicheS√©curit√©.jsx**
```javascript
// Copier src/pages/FicheForm.jsx comme template
// Remplacer le contenu par la nouvelle section

import React from 'react'
import { useForm } from '../components/FormContext'
import SidebarMenu from '../components/SidebarMenu'
import ProgressBar from '../components/ProgressBar'
import { Button } from '../components/ui/button'

export default function FicheS√©curit√©() {
  const { next, back, currentStep, totalSteps, getField, updateField, handleSave, saveStatus } = useForm()

  // PATTERN IMPORTANT : R√©cup√©rer formData pour les bool√©ens
  const formData = getField('section_securite')
  const detecteurFumee = formData.detecteur_fumee

  const handleInputChange = (field, value) => {
    updateField(field, value)
  }

  return (
    <div className="flex min-h-screen">
      <SidebarMenu />
      <div className="flex-1 flex flex-col">
        <ProgressBar />
        <div className="flex-1 p-6 bg-gray-100">
          <h1 className="text-2xl font-bold mb-6">S√©curit√©</h1>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            
            {/* D√©tecteur de fum√©e */}
            <div>
              <label className="block font-semibold mb-2">D√©tecteur de fum√©e pr√©sent ?</label>
              <div className="flex gap-4 mb-3">
                <label className="flex items-center">
                  <input 
                    type="radio" 
                    checked={detecteurFumee === true}
                    onChange={() => handleInputChange('section_securite.detecteur_fumee', true)}
                    className="mr-2"
                  />
                  Oui
                </label>
                <label className="flex items-center">
                  <input 
                    type="radio" 
                    checked={detecteurFumee === false}
                    onChange={() => handleInputChange('section_securite.detecteur_fumee', false)}
                    className="mr-2"
                  />
                  Non
                </label>
              </div>
              
              {/* Affichage conditionnel */}
              {detecteurFumee === true && (
                <div>
                  <input 
                    type="text"
                    placeholder="Pr√©cisions sur le d√©tecteur de fum√©e"
                    className="w-full p-2 border rounded"
                    value={getField('section_securite.detecteur_fumee_details')}
                    onChange={(e) => handleInputChange('section_securite.detecteur_fumee_details', e.target.value)}
                  />
                </div>
              )}
            </div>

            {/* R√©p√©ter le pattern pour les autres champs... */}
            
          </div>

          {/* Boutons navigation */}
          <div className="mt-6 flex justify-between">
            <Button variant="ghost" onClick={back} disabled={currentStep === 0}>
              Retour
            </Button>
            <div className="flex gap-3">
              <Button 
                variant="secondary" 
                onClick={handleSave}
                disabled={saveStatus.saving}
              >
                {saveStatus.saving ? 'Sauvegarde...' : 'Enregistrer'}
              </Button>
              <Button variant="primary" onClick={next}>Suivant</Button>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
```

---

## üéØ **√âTAPE 6 : INT√âGRATION DANS LE WIZARD**

### ‚úÖ **6.1 - Ajouter dans FicheWizard.jsx**
```javascript
// Dans src/pages/FicheWizard.jsx
import FicheS√©curit√© from './FicheS√©curit√©'

// Dans le tableau steps (ligne ~15)
const steps = [
  <FicheForm />,           // 0 - Propri√©taire
  <FicheLogement />,       // 1 - Logement  
  <FicheClefs />,          // 2 - Clefs
  <FicheAirbnb />,         // 3 - Airbnb
  <FicheBooking />,        // 4 - Booking
  <FicheReglementation />, // 5 - R√©glementation
  // ... autres sections existantes
  <FicheS√©curit√© />,       // 21 - S√©curit√© (derni√®re position)
]
```

### ‚úÖ **6.2 - V√©rifier l'ordre des sections**
```javascript
// Dans src/components/FormContext.jsx, ligne ~140
const sections = [
  "Propri√©taire", "Logement", "Clefs", "Airbnb", "Booking", "R√©glementation",
  "Exigences", "Avis", "Gestion Linge", "√âquipements", "Consommables", "Visite",
  "Chambres", "Salle De Bains", "Cuisine 1", "Cuisine 2", "Salon / SAM", "√âquip. Sp√©. / Ext√©rieur",
  "Communs", "T√©l√©travail", "B√©b√©", "S√©curit√©"  // ‚Üê V√©rifier position
]
```

---

## üß™ **√âTAPE 7 : TESTS ET VALIDATION**

### ‚úÖ **7.1 - Test de sauvegarde**
1. Naviguer vers la nouvelle section
2. Remplir quelques champs (radio + texte conditionnel)
3. Cliquer "Enregistrer"
4. V√©rifier message "Sauvegard√© avec succ√®s"

### ‚úÖ **7.2 - Test de chargement**
1. Aller au Dashboard
2. Ouvrir la fiche modifi√©e
3. Naviguer vers la nouvelle section
4. V√©rifier que les champs sont bien remplis

### ‚úÖ **7.3 - V√©rification BDD**
```sql
-- Dans Supabase, v√©rifier les donn√©es
SELECT securite_* FROM fiches WHERE id = 'ton_id_fiche';
```

---

## üö® **PATTERNS CRITIQUES √Ä RESPECTER**

### ‚úÖ **Radio Buttons avec Bool√©ens**
```javascript
// ‚ùå MAUVAIS - getField direct sur bool√©en
const radioValue = getField('section_securite.detecteur_fumee')

// ‚úÖ CORRECT - R√©cup√©rer formData puis propri√©t√©
const formData = getField('section_securite')
const radioValue = formData.detecteur_fumee  // true/false/null
```

### ‚úÖ **Affichage Conditionnel**
```javascript
// Pattern obligatoire pour conditions
{radioValue === true && (
  <div>Champs conditionnels</div>
)}
```

### ‚úÖ **Classes CSS Standard**
```javascript
// Labels
className="block font-semibold mb-1"

// Inputs
className="w-full p-2 border rounded"

// Grilles
className="grid grid-cols-1 md:grid-cols-2 gap-4"
```

---

## üìã **CHECKLIST FINALE**

- [ ] Colonnes Supabase ajout√©es et v√©rifi√©es
- [ ] `initialFormData` mis √† jour dans FormContext
- [ ] `mapFormDataToSupabase()` √©tendu
- [ ] `mapSupabaseToFormData()` √©tendu  
- [ ] Composant page cr√©√© avec patterns corrects
- [ ] Import ajout√© dans FicheWizard
- [ ] Ordre sections v√©rifi√©
- [ ] Test sauvegarde ‚úÖ
- [ ] Test chargement ‚úÖ
- [ ] Test navigation ‚úÖ

---

## üéØ **NOTES IMPORTANTES**

1. **Toujours utiliser `??` pour les bool√©ens** dans le mapping Supabase
2. **Pattern `getField('section_name')` puis propri√©t√©** pour les radio buttons
3. **Affichage conditionnel avec `=== true`** strict
4. **Classes Tailwind standards** pour coh√©rence UI
5. **Tester IMM√âDIATEMENT** apr√®s chaque ajout
6. **Commit Git** apr√®s validation compl√®te

**Ce process garantit une int√©gration parfaite sans casser l'existant !**